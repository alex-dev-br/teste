{
	"info": {
		"_postman_id": "e2d792fd-9aa2-4ffb-94b3-dbc364cbaafd",
		"name": "REST API Restaurantes - Tech Challenge Fase 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7819036"
	},
	"item": [
		{
			"name": "Monitoramento",
			"item": [
				{
					"name": "Actuator - Health (no auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Health is UP\", function () {",
									"  pm.response.to.have.status(200);",
									"  const body = pm.response.json();",
									"  pm.expect(body.status).to.eql(\"UP\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{basePath}}/actuator/health",
							"host": [
								"{{basePath}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "API - Ping (no auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Ping OK\", function () {",
									"  pm.response.to.have.status(200);",
									"  const body = pm.response.json();",
									"  pm.expect(body.status).to.eql(\"ok\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{basePath}}/api/v1/_ping",
							"host": [
								"{{basePath}}"
							],
							"path": [
								"api",
								"v1",
								"_ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuario",
			"item": [
				{
					"name": "Create Cases",
					"item": [
						{
							"name": "Users - Create (201)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"201 Created\", function () {",
											"  pm.response.to.have.status(201);",
											"});",
											"pm.test(\"Location header present\", function () {",
											"  pm.expect(pm.response.headers.has('Location')).to.be.true;",
											"});",
											"let body = pm.response.json();",
											"pm.collectionVariables.set(\"userId\", body.id);",
											"pm.collectionVariables.set(\"userEmail\", body.email);",
											"pm.collectionVariables.set(\"userLogin\", body.login);",
											"pm.collectionVariables.set(\"userName\", body.name);"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Joana Prado\",\n    \"email\": \"joana.prado+{{$timestamp}}@mail.com\",\n    \"login\": \"joanaprado{{$timestamp}}\",\n    \"password\": \"SenhaFort3!@#*\",\n    \"address\": {\n        \"street\": \"Rua A\",\n        \"number\": \"10\",\n        \"complement\": \"Casa\",\n        \"city\": \"São Paulo\",\n        \"neighborhood\": \"Centro\",\n        \"state\": \"SP\",\n        \"zipCode\": \"12345-678\"\n    },\n    \"roles\": [\n        \"CLIENT\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basePath}}/api/v1/users",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Users - Create (400 invalid body)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"400 Bad Request\", function () {",
											"  pm.response.to.have.status(400);",
											"});",
											"const body = pm.response.json();",
											"pm.test(\"Has invalidParams\", function () {",
											"  pm.expect(body.invalidParams).to.exist;",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Fulano da Silva\",\n    \"login\": \"fulano{{$timestamp}}\",\n    \"password\": \"Abc#1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basePath}}/api/v1/users",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Users - Create (422 duplicate email/login)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"422 Unprocessable Entity\", function () {",
											"  pm.response.to.have.status(422);",
											"});",
											"const body = pm.response.json();",
											"pm.test(\"Business rule type\", function () {",
											"  pm.expect(body.type).to.include(\"/erros/business-rule\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Joana Prado\",\n  \"email\": \"{{userEmail}}\",\n  \"login\": \"{{userLogin}}\",\n  \"password\": \"Senha Fort3!@#*\",\n  \"address\": {\n    \"street\": \"Rua A\",\n    \"number\": \"10\",\n    \"complement\": \"Casa\",\n    \"city\": \"São Paulo\",\n    \"neighborhood\": \"Centro\",\n    \"state\": \"SP\",\n    \"zipCode\": \"12345-678\"\n  },\n  \"roles\": [\n    \"CLIENT\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{basePath}}/api/v1/users",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Query",
					"item": [
						{
							"name": "Users - Get by ID (200)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"200 OK\", function () {",
											"  pm.response.to.have.status(200);",
											"});",
											"const body = pm.response.json();",
											"pm.test(\"ID matches env\", function () {",
											"  pm.expect(body.id).to.eql(pm.environment.get(\"userId\"));",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basePath}}/api/v1/users/{{userId}}",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{userId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Users - Get by name (200 or 404)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"if (pm.response.code === 200) {",
											"  const arr = pm.response.json();",
											"  pm.test(\"array not empty\", function () {",
											"    pm.expect(arr.length).to.be.above(0);",
											"  });",
											"  if (arr.length > 0) {",
											"    pm.collectionVariables.set(\"userId\", arr[0].id);",
											"  }",
											"} else {",
											"  pm.test(\"404 Not Found\", function () {",
											"    pm.response.to.have.status(404);",
											"  });",
											"}"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basePath}}/api/v1/users?name={{userName}}",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "name",
											"value": "{{userName}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Users - Get by ID (401 without auth)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"401 Unauthorized\", function () {",
											"  pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basePath}}/api/v1/users/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Deleta Usuário",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{basePath}}/api/v1/users/8abc4089-8089-4702-a71f-ccbecdecce08",
									"host": [
										"{{basePath}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"8abc4089-8089-4702-a71f-ccbecdecce08"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CORS - Preflight OPTIONS /users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Preflight OK\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"pm.test(\"CORS Allow-Origin echoes\", function () {",
									"  pm.expect(pm.response.headers.get('Access-Control-Allow-Origin')).to.eql(pm.variables.get('origin'));",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "OPTIONS",
						"header": [
							{
								"key": "Origin",
								"value": "{{origin}}"
							},
							{
								"key": "Access-Control-Request-Method",
								"value": "POST"
							},
							{
								"key": "Access-Control-Request-Headers",
								"value": "Content-Type"
							}
						],
						"url": {
							"raw": "{{basePath}}/api/v1/users",
							"host": [
								"{{basePath}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"pm.collectionVariables.set(\"accessToken\", responseJson.accessToken);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"login\": \"mariasilva\",\r\n    \"password\": \"SenhaDev#123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{basePath}}/api/v1/auth",
					"host": [
						"{{basePath}}"
					],
					"path": [
						"api",
						"v1",
						"auth"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "basePath",
			"value": "http://localhost:8080"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "userEmail",
			"value": ""
		},
		{
			"key": "userLogin",
			"value": ""
		},
		{
			"key": "userName",
			"value": ""
		}
	]
}